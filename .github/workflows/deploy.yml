name:  EKS default setting

on:
  push:
    branches:
      - main
jobs:
  setup-alb-controller:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2
          
      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
      
      - name: Install helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  
      - name: Set up kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region ap-northeast-2 \
            --name one-cluster 
      
      - name: Get VPC ID from EKS Cluster
        id: get-vpc
        run: |
          VPC_ID=$(aws eks describe-cluster \
            --name one-cluster \
            --region ap-northeast-2 \
            --query "cluster.resourcesVpcConfig.vpcId" \
            --output text)
          echo "VPC_ID=$VPC_ID" >> $GITHUB_ENV

      - name: Associate OIDC provider
        run: |
          eksctl utils associate-iam-oidc-provider \
            --region ap-northeast-2 \
            --cluster one-cluster \
            --approve

      - name: Create IAM service account
        run: |
          eksctl create iamserviceaccount \
            --cluster one-cluster \
            --namespace kube-system \
            --name aws-load-balancer-controller \
            --attach-policy-arn arn:aws:iam::777205220558:policy/AWSLoadBalancerControllerIAMPolicy \
            --override-existing-serviceaccounts \
            --region ap-northeast-2 \
            --approve

      - name: Install ALB Controller
        run: |
          helm repo add eks https://aws.github.io/eks-charts
          helm repo update

          helm upgrade --install aws-load-balancer-controller eks/aws-load-balancer-controller \
            -n kube-system \
            --set clusterName=one-cluster \
            --set serviceAccount.create=false \
            --set serviceAccount.name=aws-load-balancer-controller \
            --set vpcId=${{ env.VPC_ID }}


      - name: Label Nodes
        run: |
          NODES=($(kubectl get nodes -o jsonpath='{.items[*].metadata.name}'))
      
          kubectl label nodes ${NODES[0]} dspESType=master --overwrite
          kubectl label nodes ${NODES[0]} dspSparkType=master --overwrite
      
          kubectl label nodes ${NODES[1]} dspESType=data1 --overwrite
          kubectl label nodes ${NODES[1]} dspSparkType=worker --overwrite
      
          kubectl label nodes ${NODES[2]} dspESType=data2 --overwrite
          kubectl label nodes ${NODES[2]} dspSparkType=worker --overwrite
          kubectl label nodes ${NODES[2]} dspDBType=postgre --overwrite

      - name: Create argocd-values.yaml from secret
        run: echo "${{ secrets.ARGO_VALUES }}" > argocd-values.yaml
        
      - name: Install Argo CD with Helm
        run: |
          helm repo add argo https://argoproj.github.io/argo-helm
          helm repo update
          kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
          helm upgrade --install argocd argo/argo-cd \
            -n argocd \
            -f argocd-values.yaml
      - name: Set up Argo CD Settings from Secrets
        run: |
          mkdir -p argocd-settings
      
          echo "${{ secrets.ARGO_SECRET }}" | base64 -d > argocd-settings/admin-secret.yaml
          echo "${{ secrets.ARGO_GIT_REPO }}" | base64 -d > argocd-settings/git-repo.yaml
          echo "${{ secrets.ARGO_APPLICATION }}" | base64 -d > argocd-settings/application.yaml
    
      - name: Apply Argo CD Settings (Git repo, Application, Secrets ë“±)
        run: |
          kubectl apply -f ./argocd-settings/